{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{onAuthStateChanged}from'firebase/auth';import{auth}from'../config/firebase';import{getUserProfile}from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[userProfile,setUserProfile]=useState(null);const[loading,setLoading]=useState(true);// Import auth functions dynamically to avoid circular dependencies\nconst signUpWithEmailAndPassword=async function(email,password,displayName){let role=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'renter';let profileImage=arguments.length>4?arguments[4]:undefined;const{signUpWithEmailAndPassword:signUp}=await import('../services/authService');return signUp(email,password,displayName,role,profileImage);};const signInWithEmailAndPasswordAuth=async(email,password)=>{const{signInWithEmailAndPasswordAuth:signIn}=await import('../services/authService');return signIn(email,password);};const signInWithGoogle=async()=>{const{signInWithGoogle:googleSignIn}=await import('../services/authService');return googleSignIn();};const signOutUser=async()=>{const{signOutUser:signOut}=await import('../services/authService');await signOut();};const sendPasswordReset=async email=>{const{sendPasswordReset}=await import('../services/authService');return sendPasswordReset(email);};useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,async user=>{setCurrentUser(user);if(user){try{const profile=await getUserProfile(user.uid);setUserProfile(profile);}catch(error){console.error('Error fetching user profile:',error);}}else{setUserProfile(null);}setLoading(false);});return unsubscribe;},[]);const value={currentUser,userProfile,loading,login:signInWithEmailAndPasswordAuth,signup:signUpWithEmailAndPassword,loginWithGoogle:signInWithGoogle,logout:signOutUser,resetPassword:sendPasswordReset};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","onAuthStateChanged","auth","getUserProfile","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","currentUser","setCurrentUser","userProfile","setUserProfile","loading","setLoading","signUpWithEmailAndPassword","email","password","displayName","role","arguments","length","profileImage","signUp","signInWithEmailAndPasswordAuth","signIn","signInWithGoogle","googleSignIn","signOutUser","signOut","sendPasswordReset","unsubscribe","user","profile","uid","error","console","value","login","signup","loginWithGoogle","logout","resetPassword","Provider"],"sources":["J:/Github/Rent Easy GH/ghana-rental-platform/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\nimport { User as FirebaseUser, onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from '../config/firebase';\r\nimport { getUserProfile, UserProfile } from '../services/authService';\r\n\r\ninterface AuthContextType {\r\n  currentUser: FirebaseUser | null;\r\n  userProfile: UserProfile | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<FirebaseUser>;\r\n  signup: (email: string, password: string, displayName: string, role?: 'landlord' | 'renter', profileImage?: File) => Promise<FirebaseUser>;\r\n  loginWithGoogle: () => Promise<FirebaseUser>;\r\n  logout: () => Promise<void>;\r\n  resetPassword: (email: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState<FirebaseUser | null>(null);\r\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Import auth functions dynamically to avoid circular dependencies\r\n  const signUpWithEmailAndPassword = async (\r\n    email: string, \r\n    password: string, \r\n    displayName: string,\r\n    role: 'landlord' | 'renter' = 'renter',\r\n    profileImage?: File\r\n  ) => {\r\n    const { signUpWithEmailAndPassword: signUp } = await import('../services/authService');\r\n    return signUp(email, password, displayName, role, profileImage);\r\n  };\r\n\r\n  const signInWithEmailAndPasswordAuth = async (email: string, password: string) => {\r\n    const { signInWithEmailAndPasswordAuth: signIn } = await import('../services/authService');\r\n    return signIn(email, password);\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    const { signInWithGoogle: googleSignIn } = await import('../services/authService');\r\n    return googleSignIn();\r\n  };\r\n\r\n  const signOutUser = async () => {\r\n    const { signOutUser: signOut } = await import('../services/authService');\r\n    await signOut();\r\n  };\r\n\r\n  const sendPasswordReset = async (email: string) => {\r\n    const { sendPasswordReset } = await import('../services/authService');\r\n    return sendPasswordReset(email);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      setCurrentUser(user);\r\n      \r\n      if (user) {\r\n        try {\r\n          const profile = await getUserProfile(user.uid);\r\n          setUserProfile(profile);\r\n        } catch (error) {\r\n          console.error('Error fetching user profile:', error);\r\n        }\r\n      } else {\r\n        setUserProfile(null);\r\n      }\r\n      \r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value: AuthContextType = {\r\n    currentUser,\r\n    userProfile,\r\n    loading,\r\n    login: signInWithEmailAndPasswordAuth,\r\n    signup: signUpWithEmailAndPassword,\r\n    loginWithGoogle: signInWithGoogle,\r\n    logout: signOutUser,\r\n    resetPassword: sendPasswordReset\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}